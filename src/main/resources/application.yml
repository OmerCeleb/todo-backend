spring:
  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5433/mydb}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update  # Changed from create-drop to update for production safety
    show-sql: ${SHOW_SQL:false}  # Disable in production
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect

  application:
    name: todo-backend

  # Security configuration
  security:
    require-ssl: false

server:
  port: ${SERVER_PORT:8080}
  error:
    include-message: always
    include-binding-errors: always

# JWT Configuration - CRITICAL: Use environment variables
jwt:
  secret: ${JWT_SECRET:default-secret-change-in-production}
  expiration: ${JWT_EXPIRATION:86400000}  # 24 hours in milliseconds

# Logging configuration
logging:
  level:
    com.todoapp: ${LOG_LEVEL:INFO}
    org.springframework.security: ${LOG_LEVEL_SECURITY:WARN}
    org.springframework.web.cors: ${LOG_LEVEL_CORS:WARN}
    root: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Management endpoints (for health checks, metrics)
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized

# Application-specific configuration
app:
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:5173}

  # Default admin user (will be created on startup if not exists)
  admin:
    email: ${ADMIN_EMAIL:admin@todoapp.com}
    password: ${ADMIN_PASSWORD:admin123}
    name: ${ADMIN_NAME:Admin User}